{
  "title": "Módulo 2: Herramientas del Oficio",
  "intro": "Un buen artesano conoce sus herramientas. Vamos a configurar tu taller digital para que puedas empezar a construir. En este módulo, sentarás las bases de tu entorno de desarrollo, lo que te permitirá escribir, organizar y gestionar tu código de forma eficiente y profesional.",
  "topics": [
    "El editor de código (VS Code, Sublime Text, Replit)",
    "La terminal o consola de comandos",
    "Control de versiones con Git y GitHub",
    "Atajos de teclado y flujos de trabajo para la productividad",
    "Extensiones y configuraciones útiles para principiantes"
  ],
  "lesson": {
    "title": "Lección 2: Tu Caja de Herramientas Digital Esencial",
    "objectives": [
      "Instalar y configurar un editor de código moderno y eficiente.",
      "Dominar los comandos básicos y la navegación en la terminal.",
      "Comprender la importancia de Git y realizar operaciones fundamentales de control de versiones.",
      "Identificar y aplicar atajos de teclado clave para acelerar el desarrollo.",
      "Explorar y configurar extensiones que mejoren la experiencia de programación."
    ],
    "content": "<h3 class=\"text-2xl font-bold text-white mt-8 mb-4\">Preparando tu Entorno de Desarrollo<\/h3><p class=\"text-slate-300 mb-4\">Para ser un desarrollador efectivo, necesitas un entorno de trabajo bien configurado. Esto no solo se trata de tener el software correcto, sino de saber cómo usarlo eficientemente. Este módulo te guiará paso a paso para que tengas tu 'taller digital' listo para cualquier proyecto.<\/p><hr class=\"border-slate-700 my-6\"\/><h4 class=\"text-xl font-bold text-white mt-8 mb-4\">1. El Editor de Código: Tu Lienzo Digital<\/h4><p class=\"text-slate-300 mb-4\">El editor de código es donde pasarás la mayor parte de tu tiempo escribiendo programas. Es tu lienzo. Un buen editor te ofrece mucho más que solo un espacio para escribir: te ayuda con la sintaxis, el auto-completado, la depuración y la organización de tu código. Elegir uno adecuado y configurarlo a tu gusto es crucial para tu productividad.<\/p><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">Opciones Populares:<\/h5><ul class=\"list-disc list-inside space-y-2 text-slate-300\"><li><strong>Visual Studio Code (VS Code):<\/strong> <p>Es, sin duda, el editor más popular y versátil. Desarrollado por Microsoft, es gratuito, de código abierto y extremadamente extensible. Lo recomendamos encarecidamente para este curso debido a su vasta comunidad, soporte para casi todos los lenguajes y su facilidad de uso para principiantes.<\/p><p><strong>Instalación:<\/strong> Dirígete a <a href=\"https://code.visualstudio.com/download\" target=\"_blank\" class=\"text-cyan-400 hover:underline\">code.visualstudio.com/download<\/a> y descarga la versión para tu sistema operativo (Windows, macOS, Linux).<\/p><\/li><li><strong>Sublime Text:<\/strong> <p>Un editor ligero y extremadamente rápido, ideal para aquellos que buscan simplicidad y rendimiento. Es de pago, pero ofrece una versión de prueba ilimitada con recordatorios ocasionales para comprar la licencia.<\/p><p><strong>Instalación:<\/strong> Descárgalo desde <a href=\"https://www.sublimetext.com/3\" target=\"_blank\" class=\"text-cyan-400 hover:underline\">sublimetext.com/3<\/a>.<\/p><\/li><li><strong>Replit:<\/strong> <p>Una excelente opción para empezar si no quieres instalar nada en tu computadora. Es un entorno de desarrollo integrado (IDE) basado en la nube que te permite escribir, ejecutar y compartir código directamente desde tu navegador. Ideal para prototipos rápidos y ejercicios en línea.<\/p><p><strong>Acceso:<\/strong> Visita <a href=\"https://replit.com/\" target=\"_blank\" class=\"text-cyan-400 hover:underline\">replit.com<\/a> y crea una cuenta.<\/p><\/li><\/ul><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">Atajos Esenciales para tu Editor (¡Practícalos!):<\/h5><ul class=\"list-disc list-inside space-y-2 text-slate-300\"><li><code>Ctrl + S<\/code> (Cmd + S en Mac): <strong>Guardar<\/strong> el archivo actual. ¡Guarda frecuentemente!<\/li><li><code>Ctrl + Z<\/code> (Cmd + Z en Mac): <strong>Deshacer<\/strong> el último cambio.<\/li><li><code>Ctrl + Y<\/code> (Cmd + Shift + Z en Mac): <strong>Rehacer<\/strong> un cambio deshecho.<\/li><li><code>Ctrl + \/<\/code> (Cmd + \/ en Mac): <strong>Comentar\/Descomentar<\/strong> la línea o selección actual. Es útil para desactivar temporalmente partes del código.<\/li><li><code>Ctrl + X<\/code> (Cmd + X en Mac): <strong>Cortar<\/strong> la línea o selección.<\/li><li><code>Ctrl + C<\/code> (Cmd + C en Mac): <strong>Copiar<\/strong> la línea o selección.<\/li><li><code>Ctrl + V<\/code> (Cmd + V en Mac): <strong>Pegar<\/strong>.<\/li><li><code>Ctrl + F<\/code> (Cmd + F en Mac): <strong>Buscar<\/strong> texto dentro del archivo.<\/li><li><code>Ctrl + Shift + P<\/code> (Cmd + Shift + P en Mac - Solo VS Code): Abre la <strong>paleta de comandos<\/strong>, el cerebro de VS Code, donde puedes ejecutar casi cualquier acción.<\/li><\/ul><hr class=\"border-slate-700 my-6\"\/><h4 class=\"text-xl font-bold text-white mt-8 mb-4\">2. La Terminal o Consola de Comandos: El Lenguaje del Sistema<\/h4><p class=\"text-slate-300 mb-4\">La terminal (también conocida como consola, línea de comandos o shell) es una interfaz de texto donde puedes interactuar directamente con tu sistema operativo. Aunque al principio puede parecer intimidante, es una herramienta increíblemente poderosa para automatizar tareas, navegar por el sistema de archivos, ejecutar programas y mucho más. Todo desarrollador moderno necesita dominarla.<\/p><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">¿Cómo Acceder?<\/h5><ul class=\"list-disc list-inside space-y-2 text-slate-300\"><li><strong>Windows:<\/strong> Puedes usar <strong>CMD<\/strong> (Símbolo del Sistema) o <strong>PowerShell<\/strong>. Recomendamos instalar <strong>Git Bash<\/strong> (viene con Git) ya que simula un entorno Linux y es muy útil para el desarrollo web.<\/li><li><strong>macOS:<\/strong> Abre la aplicación <strong>Terminal<\/strong> (la encuentras en Aplicaciones > Utilidades).<\/li><li><strong>Linux:<\/strong> La mayoría de las distribuciones vienen con un emulador de terminal preinstalado.<\/li><\/ul><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">Comandos Básicos Esenciales (¡Prácticalos en tu terminal!):<\/h5><div class=\"lesson-code-block\"><pre class=\"font-mono text-sm text-cyan-300\"><code>pwd             # Print Working Directory: Muestra la ruta de la carpeta actual.\nls              # List: Lista los archivos y carpetas en el directorio actual.\n                #   ls -l: Muestra detalles (permisos, tamaño, fecha).\n                #   ls -a: Muestra archivos ocultos.\ncd [nombre_carpeta] # Change Directory: Cambia a la carpeta especificada.\n                #   cd ..: Sube un nivel en la estructura de carpetas.\n                #   cd ~: Vuelve a tu directorio de inicio (home).\n                #   cd /: Va a la raíz del sistema de archivos.\nmkdir [nombre_carpeta] # Make Directory: Crea una nueva carpeta.\nrmdir [nombre_carpeta] # Remove Directory: Elimina una carpeta (debe estar vacía).\nrm [nombre_archivo] # Remove: Elimina un archivo.\n                #   rm -r [nombre_carpeta]: Elimina una carpeta y su contenido (¡Cuidado!).\ntouch [nombre_archivo] # Crea un archivo vacío (en Linux/macOS/Git Bash).\ncp [origen] [destino] # Copy: Copia archivos o directorios.\nmv [origen] [destino] # Move: Mueve o renombra archivos/directorios.\nclear           # Limpia la pantalla de la terminal.\nexit            # Cierra la terminal.<\/code><\/pre><\/div><p class=\"text-slate-300 mb-4\"><strong>Consejo Pro:<\/strong> Usa la tecla <code>Tab<\/code> para autocompletar nombres de archivos y carpetas en la terminal. Esto te ahorrará mucho tiempo y evitará errores de tipeo.<\/p><hr class=\"border-slate-700 my-6\"\/><h4 class=\"text-xl font-bold text-white mt-8 mb-4\">3. Git y GitHub: Tu Máquina del Tiempo y Control de Proyectos<\/h4><p class=\"text-slate-300 mb-4\">Imagina poder retroceder en el tiempo en tu código, ver quién hizo qué cambio, y fusionar el trabajo de varias personas sin conflictos. Eso es Git. Es un <strong>Sistema de Control de Versiones Distribuido (DVCS)<\/strong>, una herramienta esencial para cualquier desarrollador. <strong>GitHub<\/strong>, por otro lado, es una plataforma en la nube que aloja tus repositorios Git, facilitando la colaboración y el respaldo de tu código.<\/p><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">¿Por qué Git es esencial?<\/h5><ul class=\"list-disc list-inside space-y-2 text-slate-300\"><li><strong>Historial Completo:<\/strong> Cada cambio que haces está registrado. Puedes ver versiones anteriores, quién hizo qué y cuándo.<\/li><li><strong>Colaboración:<\/strong> Facilita que múltiples personas trabajen en el mismo proyecto simultáneamente sin pisarse los cambios.<\/li><li><strong>Experimentación Segura:<\/strong> Puedes crear 'ramas' (branches) para probar nuevas características sin afectar el código principal. Si algo sale mal, simplemente descartas la rama.<\/li><li><strong>Respaldo:<\/strong> Al subir tu código a GitHub (o GitLab, Bitbucket), tienes un respaldo seguro en la nube.<\/li><\/ul><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">Instalación y Configuración Básica de Git:<\/h5><ul class=\"list-disc list-inside space-y-2 text-slate-300\"><li><strong>Windows:<\/strong> Descarga desde <a href=\"https://git-scm.com/download/win\" target=\"_blank\" class=\"text-cyan-400 hover:underline\">git-scm.com/download/win<\/a>. Durante la instalación, asegúrate de seleccionar la opción para instalar Git Bash.<\/li><li><strong>macOS:<\/strong> Puedes instalarlo con Homebrew (<code>brew install git<\/code>) o descargando el instalador de <a href=\"https://git-scm.com/download/mac\" target=\"_blank\" class=\"text-cyan-400 hover:underline\">git-scm.com/download/mac<\/a>.<\/li><li><strong>Linux:<\/strong> Usa el gestor de paquetes de tu distribución (ej: <code>sudo apt install git<\/code> para Debian\/Ubuntu).<\/li><\/ul><p class=\"text-slate-300 mb-4 mt-4\">Una vez instalado, configura tu nombre de usuario y correo electrónico (esto aparecerá en tus commits):<\/p><div class=\"lesson-code-block\"><pre class=\"font-mono text-sm text-cyan-300\"><code>git config --global user.name \"Tu Nombre\"\ngit config --global user.email \"tu.email@example.com\"<\/code><\/pre><\/div><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">Flujo de Trabajo Básico con Git (¡Fundamental!):<\/h5><div class=\"lesson-code-block\"><pre class=\"font-mono text-sm text-cyan-300\"><code># 1. Inicializar un nuevo repositorio Git en tu carpeta de proyecto:\ngit init\n\n# 2. Verificar el estado de tus archivos (cuáles han cambiado):\ngit status\n\n# 3. Añadir cambios al 'área de preparación' (staging area):\n#    Prepara los archivos para el próximo 'commit' (guardado).\ngit add .                   # Añade todos los cambios en el directorio actual.\n# git add [nombre_archivo]  # Añade un archivo específico.\n\n# 4. Confirmar (commit) los cambios en el historial de Git:\n#    Crea un punto de guardado con un mensaje descriptivo.\ngit commit -m \"Un mensaje claro y conciso de los cambios realizados.\"\n\n# 5. Conectar tu repositorio local con uno remoto en GitHub (solo la primera vez):\ngit remote add origin [URL_del_repositorio_en_GitHub]\n\n# 6. Subir tus cambios al repositorio remoto (GitHub):\ngit push -u origin master   # La primera vez, usa -u para vincular.\n# git push origin main      # Si tu rama principal se llama 'main'.\n# git push                  # Después de la primera vez, solo 'git push'.\n\n# 7. Descargar cambios de un repositorio remoto:\ngit pull<\/code><\/pre><\/div><hr class=\"border-slate-700 my-6\"\/><h4 class=\"text-xl font-bold text-white mt-8 mb-4\">4. Atajos de Teclado y Productividad: Velocidad y Eficiencia<\/h4><p class=\"text-slate-300 mb-4\">Los atajos de teclado son tus mejores amigos para programar más rápido y con menos esfuerzo. Cada minuto que ahorras al no mover el ratón se suma, y te permite mantener tu mente en el código. ¡El objetivo es que tus dedos se muevan casi por sí solos!<\/p><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">Principios de Productividad:<\/h5><ul class=\"list-disc list-inside space-y-2 text-slate-300\"><li><strong>Menos Ratón, Más Teclado:<\/strong> Intenta realizar la mayor cantidad de acciones posibles con el teclado.<\/li><li><strong>Organización:<\/strong> Mantén tu espacio de trabajo (escritorio, carpetas) ordenado.<\/li><li><strong>Automatización:<\/strong> Siempre que puedas, automatiza tareas repetitivas (scripts, extensiones).<\/li><li><strong>Descansos:<\/strong> La productividad no se trata de trabajar sin parar, sino de trabajar de forma inteligente.<\/li><\/ul><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">Atajos Adicionales (VS Code altamente recomendado):<\/h5><ul class=\"list-disc list-inside space-y-2 text-slate-300\"><li><code>Ctrl + B<\/code> (Cmd + B en Mac): <strong>Alternar barra lateral<\/strong> (Explorer, Search, etc.).<\/li><li><code>Ctrl + `<\/code> (Cmd + ` en Mac): <strong>Alternar terminal integrada<\/strong>.<\/li><li><code>Ctrl + P<\/code> (Cmd + P en Mac): <strong>Ir a archivo<\/strong> rápidamente.<\/li><li><code>Ctrl + Shift + F<\/code> (Cmd + Shift + F en Mac): <strong>Buscar en todos los archivos<\/strong> del proyecto.<\/li><li><code>Alt + Flecha Arriba\/Abajo<\/code> (Option + Flecha Arriba\/Abajo en Mac): <strong>Mover línea<\/strong> arriba\/abajo.<\/li><li><code>Shift + Alt + Flecha Arriba\/Abajo<\/code> (Shift + Option + Flecha Arriba\/Abajo en Mac): <strong>Duplicar línea<\/strong> arriba\/abajo.<\/li><li><code>Ctrl + D<\/code> (Cmd + D en Mac): <strong>Seleccionar siguiente ocurrencia<\/strong> de la palabra seleccionada (para editar múltiples a la vez).<\/li><li><code>F2<\/code>: <strong>Renombrar símbolo<\/strong> (variable, función, etc.) en todo el archivo o proyecto.<\/li><\/ul><hr class=\"border-slate-700 my-6\"\/><h4 class=\"text-xl font-bold text-white mt-8 mb-4\">5. Extensiones y Configuraciones Útiles para Principiantes (VS Code)<\/h4><p class=\"text-slate-300 mb-4\">Las extensiones son como \"plugins\" que añaden funcionalidades a tu editor. En VS Code, el ecosistema de extensiones es enorme y puede transformar tu experiencia de desarrollo. Aquí hay algunas esenciales para empezar:<\/p><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">Extensiones Recomendadas:<\/h5><ul class=\"list-disc list-inside space-y-2 text-slate-300\"><li><strong>Prettier - Code formatter:<\/strong> <p>¡Imprescindible! Formatea automáticamente tu código para que siempre se vea limpio y consistente. Adiós a las discusiones sobre la indentación.<\/p><\/li><li><strong>Live Server:<\/strong> <p>Si estás trabajando con HTML\/CSS\/JavaScript, esta extensión te permite lanzar un servidor de desarrollo local con recarga en vivo. Cada vez que guardas un cambio en tu código, el navegador se actualiza automáticamente.<\/p><\/li><li><strong>Bracket Pair Colorizer (o la característica nativa de VS Code si usas una versión reciente):<\/strong> <p>Colorea los pares de paréntesis, corchetes y llaves para que sea más fácil ver dónde empieza y termina cada bloque de código. Mejora enormemente la legibilidad.<\/p><\/li><li><strong>ESLint (para JavaScript\/TypeScript):<\/strong> <p>Detecta problemas de sintaxis y estilo en tu código, ayudándote a escribir código más robusto y a seguir buenas prácticas.<\/p><\/li><li><strong>GitLens — Git supercharged:<\/strong> <p>Una extensión muy potente para Git que te muestra quién escribió cada línea de código, cuándo, y el historial de cambios directamente en tu editor. Útil para entender proyectos existentes.<\/p><\/li><li><strong>Material Icon Theme:<\/strong> <p>Añade iconos bonitos y reconocibles a los archivos y carpetas en tu explorador de VS Code. Hace que la navegación visual sea mucho más agradable.<\/p><\/li><\/ul><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">Configuraciones Clave en VS Code (<code>Ctrl + ,<\/code> para abrir Configuración):<\/h5><ul class=\"list-disc list-inside space-y-2 text-slate-300\"><li><strong>Auto Save:<\/strong> Busca 'files.autoSave' y configúralo a 'onFocusChange' o 'afterDelay'. Esto guardará tus archivos automáticamente.<\/li><li><strong>Tab Size:<\/strong> Busca 'editor.tabSize' y configúralo a 2 o 4, según tu preferencia o la convención del lenguaje que uses.<\/li><li><strong>Word Wrap:<\/strong> Busca 'editor.wordWrap' y configúralo a 'on' si quieres que las líneas largas se ajusten al ancho de tu editor.<\/li><li><strong>Font Size \/ Font Family:<\/strong> Personaliza la fuente y el tamaño para tu comodidad. 'editor.fontSize' y 'editor.fontFamily'.<\/li><\/ul>"
  }
}
