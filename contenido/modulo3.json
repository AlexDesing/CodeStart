{
  "title": "Módulo 3: Fundamentos de la Web - HTML y CSS",
  "intro": "Toda página web, sin importar cuán compleja sea o cuán interactiva se vuelva con JavaScript, se construye sobre dos pilares fundamentales: **HTML para la estructura** y **CSS para el estilo visual**. Comprender a fondo estos dos lenguajes es el primer gran paso para convertirte en un desarrollador web.",
  "topics": [
    "HTML5: El Lenguaje de Marcado para la Estructura Web",
    "La Estructura Esencial de un Documento HTML",
    "Etiquetas HTML Comunes y Atributos",
    "CSS3: El Lenguaje para el Estilo y Diseño Web",
    "La Interacción Armoniosa entre HTML y CSS",
    "Conceptos Clave de Selectores y Propiedades CSS",
    "Buenas Prácticas de Sintaxis, Indentación y Comentarios",
    "La Importancia de la Semántica y la Accesibilidad Web",
    "Símbolos Fundamentales en la Programación Web"
  ],
  "lesson": {
    "title": "Lección 3: HTML y CSS, El Dúo Dinámico de la Web",
    "objectives": [
      "Comprender el rol fundamental de HTML como el 'esqueleto' de una página web.",
      "Aprender a crear la estructura básica de un documento HTML5.",
      "Identificar y utilizar las etiquetas HTML más comunes y sus atributos.",
      "Entender el propósito de CSS como el 'maquillaje' y 'vestimenta' de tu HTML.",
      "Escribir reglas CSS para aplicar estilos a elementos HTML.",
      "Dominar las diferentes formas de vincular CSS a HTML.",
      "Aplicar buenas prácticas de sintaxis, indentación y comentarios para un código limpio.",
      "Reconocer la importancia de la semántica HTML y la accesibilidad web.",
      "Familiarizarse con el uso de símbolos clave (llaves, corchetes, comillas, etc.) en el desarrollo web."
    ],
    "content": "<h3 class=\"text-2xl font-bold text-white mt-8 mb-4\">Construyendo el Cimiento de tus Páginas Web</h3><p class=\"text-slate-300 mb-4\">En el mundo de la programación web, HTML y CSS son como el cuerpo humano. **HTML (HyperText Markup Language)** es el esqueleto y los órganos: define la estructura, el contenido y la organización de la información. **CSS (Cascading Style Sheets)**, por su parte, es la piel, el cabello, la ropa y el estilo: se encarga de la apariencia visual, los colores, las fuentes, los tamaños y la disposición de los elementos. Juntos, crean la experiencia visual que conocemos como 'página web'.</p><hr class=\"border-slate-700 my-6\"/><h4 class=\"text-xl font-bold text-white mt-8 mb-4\">1. HTML5: El Lenguaje de Marcado para la Estructura Web</h4><p class=\"text-slate-300 mb-4\">HTML no es un lenguaje de programación en el sentido tradicional (no tiene lógica de control como bucles o condicionales), sino un **lenguaje de marcado**. Utiliza un sistema de **etiquetas** (o 'tags') para describir y estructurar el contenido de una página. Cada etiqueta tiene un significado y un propósito específicos, indicándole al navegador cómo debe interpretar y mostrar la información.</p><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">Anatomía de una Etiqueta HTML:</h5><p class=\"text-slate-300 mb-4\">La mayoría de las etiquetas HTML vienen en pares: una **etiqueta de apertura** y una **etiqueta de cierre**. El contenido va entre ellas. Algunas etiquetas son 'vacías' y no necesitan cierre (ej. para imágenes o saltos de línea).</p><div class=\"lesson-code-block\"><pre class=\"font-mono text-sm text-cyan-300\"><code>&lt;p&gt;Este es un párrafo de texto.&lt;/p&gt;\n&lt;!-- Etiqueta de apertura ^         ^ Etiqueta de cierre --&gt;\n\n&lt;img src=\\\"imagen.jpg\\\" alt=\\\"Descripción de la imagen\\\"&gt; &lt;!-- Etiqueta vacía (self-closing) --&gt;</code></pre></div><p class=\"text-slate-300 mb-4\">Las etiquetas pueden tener **atributos**, que proporcionan información adicional sobre el elemento. Se colocan en la etiqueta de apertura y consisten en un **nombre del atributo** seguido de un signo igual y un **valor entre comillas**.</p><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">Etiquetas HTML Comunes y su Propósito:</h5><ul class=\"list-disc list-inside space-y-2 text-slate-300\"><li><code>&lt;h1&gt;</code> a <code>&lt;h6&gt;</code>: **Encabezados**. Definen títulos y subtítulos, siendo <code>&lt;h1&gt;</code> el más importante.</li><li><code>&lt;p&gt;</code>: **Párrafos**. Se usan para bloques de texto.</li><li><code>&lt;a&gt;</code>: **Enlaces (Anchor)**. Crean hipervínculos a otras páginas o secciones. Requieren el atributo `href`. Ejemplo: <code>&lt;a href=\\\"https://www.google.com\\\"&gt;Ir a Google&lt;/a&gt;</code>.</li><li><code>&lt;img&gt;</code>: **Imágenes**. Muestran imágenes. Requieren el atributo `src` (ruta de la imagen) y `alt` (texto alternativo para accesibilidad).</li><li><code>&lt;ul&gt;</code>, <code>&lt;ol&gt;</code>, <code>&lt;li&gt;</code>: **Listas**. <code>&lt;ul&gt;</code> para listas desordenadas, <code>&lt;ol&gt;</code> para ordenadas, y <code>&lt;li&gt;</code> para cada elemento de la lista.</li><li><code>&lt;div&gt;</code>: **Contenedor genérico**. Se usa para agrupar elementos y aplicarles estilos o manipularlos con JavaScript. No tiene significado semántico propio.</li><li><code>&lt;span&gt;</code>: **Contenedor de línea**. Similar a `div`, pero para agrupar contenido dentro de un párrafo o línea de texto.</li></ul><hr class=\"border-slate-700 my-6\"/><h4 class=\"text-xl font-bold text-white mt-8 mb-4\">2. La Estructura Esencial de un Documento HTML5</h4><p class=\"text-slate-300 mb-4\">Cada página web HTML sigue una estructura estándar que le dice al navegador cómo interpretarla. Es como la plantilla básica para construir cualquier sitio web.</p><div class=\"lesson-code-block\"><pre class=\"font-mono text-sm text-cyan-300\"><code>&lt;!DOCTYPE html&gt; &lt;!-- Indica que el documento es HTML5 --&gt;\n&lt;html lang=\\\"es\\\"&gt; &lt;!-- Contenedor principal de todo el contenido HTML. 'lang' define el idioma. --&gt;\n  &lt;head&gt; &lt;!-- Contiene metadatos sobre la página, que no son visibles directamente en el navegador --&gt;\n    &lt;meta charset=\\\"UTF-8\\\"&gt; &lt;!-- Define la codificación de caracteres para evitar problemas con acentos y caracteres especiales --&gt;\n    &lt;meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"&gt; &lt;!-- Importante para la responsividad en dispositivos móviles --&gt;\n    &lt;title&gt;Mi Primera Página Web Impactante&lt;/title&gt; &lt;!-- Título que aparece en la pestaña del navegador --&gt;\n    &lt;link rel=\\\"stylesheet\\\" href=\\\"estilos.css\\\"&gt; &lt;!-- ¡Aquí se enlaza nuestro archivo CSS! --&gt;\n  &lt;/head&gt;\n  &lt;body&gt; &lt;!-- Contiene todo el contenido visible de la página web (texto, imágenes, videos, etc.) --&gt;\n    &lt;h1&gt;¡Bienvenidos a mi Curso de Programación!&lt;/h1&gt;\n    &lt;p&gt;Este es un ejemplo de cómo estructuramos el contenido de una página web.&lt;/p&gt;\n    &lt;!-- Aquí irá más contenido HTML --&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre></div><ul class=\"list-disc list-inside space-y-2 text-slate-300\"><li><code>&lt;!DOCTYPE html&gt;</code>: Siempre debe ser la primera línea. Le dice al navegador que estamos usando HTML5.</li><li><code>&lt;html lang=\\\"es\\\"&gt;</code>: Es la etiqueta raíz que envuelve todo el contenido de la página. El atributo `lang` es importante para la accesibilidad y los motores de búsqueda.</li><li><code>&lt;head&gt;</code>: Contiene información \"meta\" sobre la página, como el título que aparece en la pestaña del navegador (`&lt;title&gt;`), la codificación de caracteres (`&lt;meta charset=\\\"UTF-8\\\"&gt;`), y enlaces a archivos externos como CSS. Nada de lo que pongas aquí es directamente visible en la página.</li><li><code>&lt;body&gt;</code>: Aquí va todo el contenido que los usuarios verán e interactuarán: textos, imágenes, videos, formularios, etc.</li></ul><hr class=\"border-slate-700 my-6\"/><h4 class=\"text-xl font-bold text-white mt-8 mb-4\">3. CSS3: El Lenguaje para el Estilo y Diseño Web</h4><p class=\"text-slate-300 mb-4\">CSS (Cascading Style Sheets) es el lenguaje que usamos para darle vida visual a nuestro HTML. Define cómo se ven los elementos: sus colores, tamaños, fuentes, posiciones y animaciones. Sin CSS, la web sería un montón de texto sin formato, como un documento de Word sin ninguna opción de diseño.</p><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">Anatomía de una Regla CSS:</h5><p class=\"text-slate-300 mb-4\">Una regla CSS consta de un **selector**, que apunta al elemento HTML que queremos estilizar, y un bloque de **declaraciones**, que son las propiedades y sus valores.</p><div class=\"lesson-code-block\"><pre class=\"font-mono text-sm text-cyan-300\"><code>p {             &lt;!-- Selector: Apunta a todos los párrafos (&lt;p&gt;). --&gt;\n  color: #e0e0e0; &lt;!-- Declaración 1: Propiedad 'color' con valor '#e0e0e0' (gris claro). --&gt;\n  font-size: 1.1rem; &lt;!-- Declaración 2: Propiedad 'font-size' con valor '1.1rem'. --&gt;\n  line-height: 1.6; &lt;!-- Declaración 3: Propiedad 'line-height' con valor '1.6'. --&gt;\n}\n\nh1 {\n  color: #2dd4bf;\n  text-align: center; &lt;!-- Alinea el texto al centro --&gt;\n}</code></pre></div><ul class=\"list-disc list-inside space-y-2 text-slate-300\"><li><strong>Selector:</strong> Es lo que le dice a CSS a qué elemento o elementos HTML debe aplicar el estilo. Puede ser el nombre de una etiqueta (`p`, `h1`), una clase (`.mi-clase`), un ID (`#mi-id`), o combinaciones.</li><li><strong>Declaración:</strong> Dentro de las llaves `{ }`, definimos una o más declaraciones. Cada declaración es una **propiedad** (ej. `color`, `font-size`) seguida de dos puntos `:`, y luego su **valor** (ej. `red`, `24px`), terminando con un punto y coma `;`.</li></ul><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">¿Cómo Vinculamos CSS con HTML?</h5><p class=\"text-slate-300 mb-4\">Hay tres formas principales de aplicar estilos CSS a tu HTML:</p><ol class=\"list-decimal list-inside space-y-2 text-slate-300\"><li><strong>En línea (Inline Styles):</strong> Se aplica el estilo directamente en la etiqueta HTML usando el atributo `style`. **No es una buena práctica para proyectos grandes** porque mezcla estructura con estilo y es difícil de mantener. <div class=\"lesson-code-block\"><pre class=\"font-mono text-sm text-cyan-300\"><code>&lt;p style=\\\"color: blue; font-weight: bold;\\\"&gt;Este párrafo es azul y negrita.&lt;/p&gt;</code></pre></div></li><li><strong>Interno (Internal/Embedded Styles):</strong> Se escriben las reglas CSS dentro de la etiqueta `<style>` en la sección `<head>` de tu documento HTML. Útil para estilos específicos de una sola página. <div class=\"lesson-code-block\"><pre class=\"font-mono text-sm text-cyan-300\"><code>&lt;head&gt;\n  &lt;style&gt;\n    h1 {\n      color: purple;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;</code></pre></div></li><li><strong>Externo (External Stylesheets):</strong> **La forma más recomendada y profesional.** Las reglas CSS se escriben en un archivo separado (`.css`), y luego se enlaza este archivo a tu HTML usando la etiqueta `<link>` en la sección `<head>`. Esto mantiene tu HTML limpio y facilita la reutilización de estilos en múltiples páginas. <div class=\"lesson-code-block\"><pre class=\"font-mono text-sm text-cyan-300\"><code>&lt;head&gt;\n  &lt;link rel=\\\"stylesheet\\\" href=\\\"styles.css\\\"&gt; &lt;!-- 'styles.css' es el nombre de tu archivo CSS --&gt;\n&lt;/head&gt;</code></pre></div></li></ol><hr class=\"border-slate-700 my-6\"/><h4 class=\"text-xl font-bold text-white mt-8 mb-4\">4. Buenas Prácticas para un Código Limpio y Mantenible</h4><p class=\"text-slate-300 mb-4\">Escribir código no solo es hacer que funcione, sino también que sea fácil de leer y entender para ti y para otros desarrolladores. Las buenas prácticas son cruciales:</p><ul class=\"list-disc list-inside space-y-2 text-slate-300\"><li>**Indentación Consistente:** Usa espacios (generalmente 2 o 4) para indentar el código anidado. Esto muestra la jerarquía y hace el código mucho más legible. Tu editor de código (VS Code, Sublime) puede ayudarte a automatizar esto (recuerda la extensión Prettier del Módulo 2).</li><li>**Minúsculas para Etiquetas y Atributos:** Siempre escribe los nombres de las etiquetas HTML y los atributos en minúsculas.</li><li>**Cierre de Etiquetas:** Asegúrate de que cada etiqueta abierta tenga su correspondiente etiqueta de cierre (a menos que sea una etiqueta vacía como `<img>` o `<br>`).</li><li>**Comentarios Explicativos:** Utiliza comentarios para explicar partes complejas de tu código, decisiones de diseño, o para dejar notas.</li></ul><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">Sintaxis de Comentarios:</h5><div class=\"lesson-code-block\"><pre class=\"font-mono text-sm text-cyan-300\"><code>&lt;!-- Esto es un comentario en HTML. No es visible en el navegador. --&gt;\n\n/* Esto es un comentario en CSS. Útil para explicar bloques de estilos. */</code></pre></div><hr class=\"border-slate-700 my-6\"/><h4 class=\"text-xl font-bold text-white mt-8 mb-4\">5. La Importancia de la Semántica y la Accesibilidad Web</h4><p class=\"text-slate-300 mb-4\">HTML5 introdujo etiquetas **semánticas**, que son etiquetas HTML que tienen un significado claro y explícito sobre el tipo de contenido que contienen. Usarlas no solo hace tu código más comprensible para otros desarrolladores, sino que también es fundamental para la **accesibilidad web**.</p><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">¿Qué es la Accesibilidad Web?</h5><p class=\"text-slate-300 mb-4\">La accesibilidad web significa que tu página puede ser utilizada y comprendida por la mayor cantidad de personas posible, incluyendo aquellas con discapacidades (visuales, auditivas, motoras, cognitivas). Los **lectores de pantalla** (software que lee el contenido de la web en voz alta) se basan en la estructura semántica de tu HTML para presentar la información de manera coherente a los usuarios con discapacidad visual.</p><h5 class=\"text-lg font-semibold text-white mt-4 mb-2\">Etiquetas Semánticas Clave:</h5><ul class=\"list-disc list-inside space-y-2 text-slate-300\"><li><code>&lt;header&gt;</code>: Contiene el encabezado de una sección o de la página (logotipos, navegación, títulos).</li><li><code>&lt;nav&gt;</code>: Contiene los enlaces de navegación principales.</li><li><code>&lt;main&gt;</code>: Representa el contenido principal y dominante de un documento. Solo debe haber uno por página.</li><li><code>&lt;article&gt;</code>: Contenido independiente y auto-contenido, como una entrada de blog o un comentario.</li><li><code>&lt;section&gt;</code>: Agrupa contenido temáticamente relacionado.</li><li><code>&lt;aside&gt;</code>: Contenido relacionado pero secundario al contenido principal (ej. barras laterales, publicidad).</li><li><code>&lt;footer&gt;</code>: Contiene el pie de página de una sección o de la página (información de derechos de autor, enlaces de contacto).</li></ul><p class=\"text-slate-300 mb-4\">**¡Evita usar solo <code>&lt;div&gt;</code> para todo!** Al usar `<header>` en lugar de `<div class=\\\"header\\\">`, le estás diciendo al navegador (y a los lectores de pantalla) que ese `div` es, de hecho, el encabezado de tu sitio, lo cual es mucho más significativo.</p><hr class=\"border-slate-700 my-6\"/><h4 class=\"text-xl font-bold text-white mt-8 mb-4\">6. Símbolos Fundamentales en la Programación Web (Un Repaso General)</h4><p class=\"text-slate-300 mb-4\">Además de las etiquetas, atributos y valores, te encontrarás con una serie de símbolos especiales que son cruciales para la sintaxis de HTML, CSS y, más adelante, JavaScript. Son como la puntuación en un idioma, le dicen al intérprete dónde empieza y termina cada instrucción o bloque.</p><ul class=\"list-disc list-inside space-y-2 text-slate-300\"><li>**<code>&lt; &gt;</code> (Menor que / Mayor que):** Usados para delimitar etiquetas HTML. Ej: <code>&lt;p&gt;</code>.</li><li>**<code>{ }</code> (Llaves / Curly Brackets):** Agrupan bloques de código. En CSS, encierran las declaraciones de estilo para un selector. En JavaScript, definen bloques de funciones o de objetos.</li><li>**<code>[ ]</code> (Corchetes / Square Brackets):** Se usan principalmente para definir o acceder a elementos en **listas o arreglos (arrays)** en JavaScript.</li><li>**<code>( )</code> (Paréntesis / Parentheses):** Se usan en funciones para envolver los argumentos, en estructuras de control (como `if` o `for`) para envolver condiciones, y para agrupar expresiones matemáticas.</li><li>**<code>\\\" \\\"</code> o <code>' '</code> (Comillas Dobles / Simples):** Encierran **cadenas de texto (strings)**, como los valores de los atributos HTML (`alt=\\\"Mi imagen\\\"`) o texto en JavaScript. Es buena práctica ser consistente con cuál usar.</li><li>**<code>;</code> (Punto y Coma / Semicolon):** Indica el **final de una instrucción** o declaración. Es crucial en CSS (separando propiedades) y en JavaScript (separando sentencias).</li><li>**<code>,</code> (Coma / Comma):** Separa elementos en listas, argumentos de funciones, o propiedades en objetos.</li><li>**<code>:</code> (Dos Puntos / Colon):** En CSS, separa una propiedad de su valor (`color: blue;`). En JavaScript, separa la clave del valor en objetos.</li><li>**<code>/</code> (Barra Inclinada / Slash):** Se usa en la etiqueta de cierre HTML (`&lt;/p&gt;`) y en URLs para indicar directorios.</li></ul><p class=\"text-slate-300 mb-4\">Comprender el rol de cada uno de estos símbolos te ayudará a leer y escribir código sin errores de sintaxis y a entender mejor cómo las diferentes partes de tu código interactúan.</p>"
  }
}